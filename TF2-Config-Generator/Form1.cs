using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace TF2_Config_Generator
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void panel1_Paint(object sender, PaintEventArgs e)
        {

        }

        private void btn_createConfig_Click(object sender, EventArgs e)
        {
            SaveFileDialog saveFileDialog1 = new SaveFileDialog();

            string tf2cfgPath = @"Program Files (x86)\Steam\steamapps\common\Team Fortress 2\tf\cfg";

            System.IO.DriveInfo[] myDrives = System.IO.DriveInfo.GetDrives();

            bool setDirectory = false;
            foreach (System.IO.DriveInfo drive in myDrives)
            {
                if (setDirectory)
                    break;

                string tf2Path = drive.Name + tf2cfgPath;

                if (System.IO.Directory.Exists(tf2Path))
                {
                    saveFileDialog1.InitialDirectory = tf2Path;
                    setDirectory = true;
                }
            }

            if (!setDirectory)
                saveFileDialog1.InitialDirectory = @"C:\";


            saveFileDialog1.Title = "Save Configuration File";
            //saveFileDialog1.CheckFileExists = true;
            saveFileDialog1.FileName = "autoexec.cfg";
            saveFileDialog1.CheckPathExists = true;
            saveFileDialog1.AddExtension = true;
            saveFileDialog1.OverwritePrompt = true;
            saveFileDialog1.RestoreDirectory = true;
            saveFileDialog1.DefaultExt = "cfg";
            saveFileDialog1.Filter = "Config files (*.cfg)|*.cfg|All files (*.*)|*.*";
            saveFileDialog1.FilterIndex = 0;
            saveFileDialog1.RestoreDirectory = true;

            if (saveFileDialog1.ShowDialog() == DialogResult.OK)
            {
                string filePath = saveFileDialog1.FileName;

                string lines = "// autoexec.cfg\n// Generated by TF2 Config Generator by crisp\n";

                lines += "\n// GENERAL\n";
                lines += "sensitivity " + tb_sensitivity.Text + "\n";
                lines += "volume " + tb_volume.Text + "\n";
                if (rb_m_rawinputOn.Checked)  lines += "m_rawinput 1\n"; else lines += "m_rawinput 0\n";
                if (rb_cl_autoreloadOn.Checked) lines += "cl_autoreload 1\n"; else lines += "cl_autoreload 0\n";
                if (rb_hud_fastswitchOn.Checked) lines += "hud_fastswitch 1\n"; else lines += "hud_fastswitch 0\n";
                if (rb_hud_classautokillOn.Checked) lines += "hud_classautokill 1\n"; else lines += "hud_classautokill 0\n";

                lines += "\n// HUD\n";
                if (rb_hud_combattextOn.Checked) lines += "hud_combattext 1\n"; else lines += "hud_combattext 0\n";
                if (rb_cl_hud_minmodeOn.Checked) lines += "cl_hud_minmode 1\n"; else lines += "cl_hud_minmode 0\n";
                if (rb_cl_showfpsOn.Checked) lines += "cl_showfps 1\n"; else lines += "cl_showfps 0\n";
                if (rb_tf_scoreboard_ping_as_textOn.Checked) lines += "tf_scoreboard_ping_as_text 1\n"; else lines += "tf_scoreboard_ping_as_text 0\n";
                if (rb_cl_spec_carrieditemsOn.Checked) lines += "cl_spec_carrieditems 1\n"; else lines += "cl_spec_carrieditems 0\n";
                if (rb_tf_hud_atrget_id_disable_floating_healthOn.Checked) lines += "tf_hud_atrget_id_disable_floating_health 1\n"; else lines += "tf_hud_atrget_id_disable_floating_health 0\n";
                if (rb_cl_autorezoomOn.Checked) lines += "cl_autorezoom 1\n"; else lines += "cl_autorezoom 0\n";

                System.IO.File.WriteAllText(filePath, lines);
            }
        }

        private void btn_useDefaultSettings_Click(object sender, EventArgs e)
        {
            setDefaultSettings();
        }

        private void setDefaultSettings()
        {
            // GENERAL
            tb_sensitivity.Text = "4";
            tb_volume.Text = "1.0";
            rb_m_rawinputOn.Checked = true;
            rb_m_rawinputOff.Checked = false;

            rb_cl_autoreloadOn.Checked = false;
            rb_cl_autoreloadOff.Checked = true;

            rb_hud_fastswitchOn.Checked = false;
            rb_hud_fastswitchOff.Checked = true;

            rb_hud_classautokillOn.Checked = false;
            rb_hud_classautokillOff.Checked = true;


            // HUD
            rb_hud_combattextOn.Checked = true;
            rb_cl_hud_minmodeOn.Checked = false;
            rb_cl_showfpsOn.Checked = false;
            rb_tf_scoreboard_ping_as_textOn.Checked = false;
            rb_cl_spec_carrieditemsOn.Checked = true;
            rb_tf_hud_atrget_id_disable_floating_healthOn.Checked = false;
            rb_tf_hud_no_crosshair_on_scope_zoomOn.Checked = true;

            // GRAPHICS
            tb_viewmodel_fov.Text = "54";
            tb_viewmodel_fov_demo.Text = "54";
            tb_fov_desired.Text = "70";
            rb_tf_hud_show_servertimelimitOn.Checked = true;
            rb_cl_hud_playerclass_use_playermodelOn.Checked = false;
            rb_mat_vsyncOn.Checked = false;

            // CLASSES
            rb_tf_medigun_autohealOn.Checked = false;
            rb_cl_autorezoomOn.Checked = false;

        }

        private void Form1_Load(object sender, EventArgs e)
        {
            setDefaultSettings();
        }
    }
}
